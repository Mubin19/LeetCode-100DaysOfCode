Given the root of a binary tree, return all root-to-leaf paths in any order.

A leaf is a node with no children.


Example 1:


Input: root = [1,2,3,null,5]
Output: ["1->2->5","1->3"]
Example 2:

Input: root = [1]
Output: ["1"]

Solution - 

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */


class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        
        List<String> res = new ArrayList<>();
        path(root, "", res);
        return res;
    }

    public void path(TreeNode node, String pathh, List<String> res){
        if(node == null){
            return;
        }
        pathh += node.val;

        if(node.left == null && node.right == null){
            res.add(pathh);
        }
        else{
            pathh += "->";
        path(node.left, pathh, res);
        path(node.right, pathh, res);
        }


    }
}















